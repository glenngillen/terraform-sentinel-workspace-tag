import "tfrun"
import "tfstate/v2" as tfstate
import "strings"

isUnset = func(val) {
  val = val else {}
  if val is null {
    val = {}
  }
  return val is empty
}

checkTag = func(tags) {
  if isUnset(tags) {
    return false
  }
	if isUnset(tags.Workspace) {
    return false
  }
  return tags.Workspace is tfrun.Workspace.name
}

notTagged = func(values) {
  if values.tags_all is undefined {
    return false // undefined means this resource can't be tagged
  }
  tagged = checkTag(values.tags_all)
  tagged = tagged else false
  return tagged is false
}


allTagViolations = filter tfstate.resources as resource, data {
	notTagged(data.values)
}

printMessage = func(resources) {
  for resources as err {
    print(strings.join([err.resource, " does not have a tag of Workspace=", tfrun.workspace.name], ""))
  }
  return true
}

resources = map allTagViolations as resource, data {
  { "resource": resource,
    "message": "",
    "message_template":  "%s does not have a tag of %s",
    "message_objects": [resource, tfrun.workspace.name],
  }
}

printMessage(resources) 

main = rule {
  resources
}
