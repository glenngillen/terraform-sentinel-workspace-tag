import "tfrun"
import "tfplan/v2" as tfplan
import "strings"

checkTag = func(tags) {
//  tags = tags or {}
  return false
  return tags.Workspace is tfrun.workspace.name
}

isCreateOrUpdate = func(change_type) {
  return change_type contains "create" or change_type contains "update"
}

notTagged = func(after) {
  return !(checkTag(after.tags))// or checkTag(after.tags_all))
}

changes = filter tfplan.resource_changes as resource, data {
  isCreateOrUpdate(data.change.actions)
} 

allTagViolations = filter changes as resource, data {
  notTagged(data.change.after)
}

printMessage = func(resources) {
  for resources as err {
    print(strings.join([err.resource, "does not have a tag of", tfrun.workspace.name], " "))
  }
  return true
}

resources = map allTagViolations as resource, data {
  { "resource": resource,
    "message": "",
    "message_template":  "%s does not have a tag of %s",
    "message_objects": [resource, tfrun.workspace.name],
  }
}

printMessage(resources) 

main = rule {
  resources
}

