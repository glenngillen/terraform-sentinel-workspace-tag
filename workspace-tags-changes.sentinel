import "tfrun"
import "tfplan/v2" as tfplan
import "strings"

isUnset = func(val) {
  val = val else {}
  if val is null {
    val = {}
  }
  return val is empty
}

checkTag = func(tags) {
  if isUnset(tags) {
    return false
  }
	if isUnset(tags.Workspace) {
    return false
  }
  return tags.Workspace is tfrun.workspace.name
}

isCreateOrUpdate = func(change_type) {
  return change_type contains "create" or change_type contains "update"
}

notTagged = func(values) {
  tagged = (checkTag(values.tags) or checkTag(values.tags_all))
  tagged = tagged else false
  return tagged is false
}

changes = filter tfplan.resource_changes as resource, data {
  isCreateOrUpdate(data.change.actions)
} 

allTagViolations = filter changes as resource, data {
  notTagged(data.change.after)
}

printMessage = func(resources) {
  for resources as err {
    print(strings.join([err.resource, " does not have a tag of Workspace=", tfrun.workspace.name], ""))
  }
  return true
}

resources = map allTagViolations as resource, data {
  { "resource": resource,
    "message": "",
    "message_template":  "%s does not have a tag of %s",
    "message_objects": [resource, tfrun.workspace.name],
  }
}

printMessage(resources) 

main = rule {
  resources
}

